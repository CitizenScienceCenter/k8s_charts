apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: cccs-prod
  namespace: c3s-prod
  labels:
    app: cccs-prod-app
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: cccs-prod-app
  template:
    metadata:
      labels:
        app: cccs-prod-app
    spec:
      containers:
      - name: nginx
        imagePullPolicy: Always
        image: registry.citizenscience.ch/cssite:master6646c0d
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: cccs-prod-service
  namespace: c3s-prod
spec:
  selector:
    app: cccs-prod-app
  ports:
    - name: http
      protocol: 'TCP'
      port: 80
      targetPort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: cccs-prod-ingress
  namespace: c3s-prod
  annotations:
    #nginx.ingress.kubernetes.io/rewrite-target: /$2
    #nginx.ingress.kubernetes.io/configuration-snippet: |
    #  more_set_headers "server: hide";
    #  more_set_headers "X-Content-Type-Options: nosniff";
    #  more_set_headers "X-Frame-Options: DENY";
    #  more_set_headers "X-Xss-Protection: 1";
    kubernetes.io/tls-acme: "true"
spec:
  tls:
  - hosts:
    - citizenscience.ch
    - www.citizenscience.ch
    secretName: tls-certificate-secret
  rules:
  - host: citizenscience.ch
    http:
      paths:
      - path: "/"
        backend:
          serviceName: cccs-prod-service
          servicePort: http
  - host: www.citizenscience.ch
    http:
      paths:
      - path: "/"
        backend:
          serviceName: cccs-prod-service
          servicePort: http